---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: messaging-service
  labels:
    app: messaging-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: messaging-service
  template:
    metadata:
      labels:
        app: messaging-service
    spec:
      containers:
        - name: messaging-service-pod
          image: messaging-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: "{{ .Values.DB_HOST }}"
            - name: DB_PORT
              value: "{{ .Values.DB_PORT }}"
            - name: POSTGRES_DB
              value: "{{ .Values.POSTGRES_DB }}"
            - name: POSTGRES_USER
              value: "{{ .Values.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.POSTGRES_PASSWORD }}"
      #imagePullPolicy: IfNotPresent

---

apiVersion: v1
kind: Service
metadata:
  name: messaging-service
spec:
  selector:
    app: messaging-service
  ports:
    - name: http
      protocol: TCP
      # Which port on the node is the service available through?
      nodePort: 32005
      # Inside the cluster, what port does the service expose?
      port: 8080
      # Which port do pods selected by this service expose?
      targetPort: 8080
  type: LoadBalancer
