/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.prapps.retail.management.order;

import com.prapps.retail.management.order.service.OrderService;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import java.util.Collections;
import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;


@Configuration
@ExtendWith(SpringExtension.class)
@SpringBootTest(classes = OrderAppTestConfig.class)
@ActiveProfiles("test")

public class OrderAppTest {
    @Autowired
    OrderService orderService;

    private static final Long TEST_CUSTOMER_ID = 101L;
    private static final Long TEST_PRODUCT_ID = 1L;

    @Test
    public void testCreateOrder() {
        createDummyOrder();
        List<Order> retrievedOrders = orderService.findOrderByCustomer(TEST_CUSTOMER_ID);
        assertTrue(retrievedOrders != null && retrievedOrders.size() == 1);
        assertEquals(TEST_CUSTOMER_ID, retrievedOrders.get(0).getCustomerId());
        assertEquals(TEST_PRODUCT_ID, retrievedOrders.get(0).getOrderProducts().iterator().next().getProductId());
        assertNotNull(retrievedOrders.get(0).getOrderProducts().iterator().next().getOrderId());
    }

    @Test public void testFindOrderById() {
        Order order = createDummyOrder();
        Optional<Order> orderResponse = orderService.findById(order.getId());
        Order retrievedOrder = orderResponse.orElseThrow(AssertionError::new);
        assertNotNull(retrievedOrder.getId());
        assertNotNull(retrievedOrder.getCustomerId());
        assertNotNull(retrievedOrder.getCustomer());
        assertEquals(1L, retrievedOrder.getCustomer().getId());
        assertEquals("Pratik", retrievedOrder.getCustomer().getFirstName());
        assertEquals("Sengupta", retrievedOrder.getCustomer().getLastName());
        assertNotNull(retrievedOrder.getOrderProducts());
        assertEquals(1, retrievedOrder.getOrderProducts().size());
        assertNotNull(retrievedOrder.getOrderProducts().iterator().next().getProduct());
        assertNotNull(retrievedOrder.getOrderProducts().iterator().next().getProduct().getCategory());
        assertNotNull(retrievedOrder.getOrderProducts().iterator().next().getProduct().getDescription());
    }

    private Order createDummyOrder() {
        Order order = new Order();
        order.setCustomerId(TEST_CUSTOMER_ID);
        OrderProduct orderProduct = new OrderProduct();
        orderProduct.setProductId(TEST_PRODUCT_ID);
        orderProduct.setQuantity(3);
        order.setOrderProducts(Collections.singleton(orderProduct));
        return orderService.create(order);
    }
}
