buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'java'
    id 'idea'
    id 'maven-publish'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.prapps.tutorial.spring.netflix'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', 'Greenwich.SR1')
}


subprojects {
    version = '0.0.1-SNAPSHOT'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'docker'
    //apply plugin: 'maven-publish'

    repositories {
        //mavenLocal()
        mavenCentral()
    }

    bootJar.enabled = false
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    task buildDocker(type: Docker) {
        baseImage = 'openjdk:8'
        push = project.hasProperty('push')
        tag = "pratik006/${applicationName}"
        addFile {
            from jar
            rename { "${applicationName}.jar" }
        }
        entryPoint(['java', '-jar', "${applicationName}.jar"])
        exposePort(8080)
    }
    buildDocker.dependsOn(build)
}